From 7ab847b999f16e137bb445a141984f9db0e9fdf4 Mon Sep 17 00:00:00 2001
From: lbonn <github@lbonnans.net>
Date: Tue, 2 Apr 2024 12:44:13 +0200
Subject: [PATCH] Backport locking fix in sljit allocator

An erroneous locking issue was introduced in the sljit update
of commit d84f255bef4d956d67ff5da35024e7a8c0c7e669.

It caused crashes when matching regular expressions in a multi-threaded
context.

Fixes #402
---
 src/sljit/allocator_src/sljitExecAllocatorCore.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/sljit/allocator_src/sljitExecAllocatorCore.c b/src/sljit/allocator_src/sljitExecAllocatorCore.c
index 85f3a9d1..2fc91c2a 100644
--- a/src/sljit/allocator_src/sljitExecAllocatorCore.c
+++ b/src/sljit/allocator_src/sljitExecAllocatorCore.c
@@ -237,12 +237,12 @@ SLJIT_API_FUNC_ATTRIBUTE void* sljit_malloc_exec(sljit_uw size)
 		header->size = chunk_size;
 		next_header = AS_BLOCK_HEADER(header, chunk_size);
 	}
-	SLJIT_ALLOCATOR_UNLOCK();
 	next_header->size = 1;
 	next_header->prev_size = chunk_size;
 #ifdef SLJIT_HAS_EXECUTABLE_OFFSET
 	next_header->executable_offset = executable_offset;
 #endif /* SLJIT_HAS_EXECUTABLE_OFFSET */
+	SLJIT_ALLOCATOR_UNLOCK();
 	return MEM_START(header);
 }
 
